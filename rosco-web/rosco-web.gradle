/*
 * Copyright 2020 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'spinnaker.application'

ext {
  springConfigLocation = System.getProperty('spring.config.additional-location', "${System.getProperty('user.home')}/.spinnaker/")
}

run {
  systemProperty('spring.config.additional-location', project.springConfigLocation)
}
mainClassName = 'com.netflix.spinnaker.rosco.Main'

configurations.all {
  exclude group: 'javax.servlet', module: 'servlet-api'
  exclude group: "org.slf4j", module: "slf4j-log4j12"
}

dependencies {
  compile project(":rosco-core")
  compile project(":rosco-manifests")
  implementation "com.netflix.spinnaker.kork:kork-secrets-aws"
  implementation "com.netflix.spinnaker.kork:kork-secrets-gcp"
  implementation "com.netflix.spinnaker.kork:kork-swagger"
  implementation "com.netflix.spinnaker.kork:kork-web"

  implementation "org.codehaus.groovy:groovy-all"
  implementation "com.netflix.spinnaker.kork:kork-artifacts"
  implementation "org.springframework.boot:spring-boot-starter-web"
  testImplementation "org.spockframework:spock-core"
  testImplementation "org.objenesis:objenesis"
}

if (project.plugins.hasPlugin('spinnaker.package')) {
  ospackage {
    from('config/packer') {
      into '/opt/rosco/config/packer'
    }

    configurationFile('/opt/rosco/config/rosco.yml')
    configurationFile('/opt/rosco/config/packer/alicloud.json')
    configurationFile('/opt/rosco/config/packer/aws-chroot.json')
    configurationFile('/opt/rosco/config/packer/aws-ebs.json')
    configurationFile('/opt/rosco/config/packer/azure-linux.json')
    configurationFile('/opt/rosco/config/packer/gce.json')
    configurationFile('/opt/rosco/config/packer/huaweicloud.json')
    configurationFile('/opt/rosco/config/packer/yandexcloud.json')
    configurationFile('/opt/rosco/config/packer/oci.json')
    configurationFile('/opt/rosco/config/packer/install_packages.sh')

    from('../docker') {
      into "/opt/${project.applicationName}/docker"
    }
  }

  buildDeb {
    requires('unzip')
  }

  buildRpm {
    requires('unzip')
  }
}
